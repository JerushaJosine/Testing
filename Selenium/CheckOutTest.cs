// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
[TestFixture]
public class CheckOutTest {
  private IWebDriver driver;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;
  [SetUp]
  public void SetUp() {
    driver = new RemoteWebDriver(new Uri("http://localhost:4444/wd/hub"), new FirefoxOptions().ToCapabilities());
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
  }
  [TearDown]
  protected void TearDown() {
    driver.Quit();
  }
  public string waitForWindow(int timeout) {
    try {
      Thread.Sleep(timeout);
    } catch(Exception e) {
      Console.WriteLine("{0} Exception caught.", e);
    }
    var whNow = ((IReadOnlyCollection<object>)driver.WindowHandles).ToList();
    var whThen = ((IReadOnlyCollection<object>)vars["WindowHandles"]).ToList();
    if (whNow.Count > whThen.Count) {
      return whNow.Except(whThen).First().ToString();
    } else {
      return whNow.First().ToString();
    }
  }
  [Test]
  public void checkOut() {
    // Test name: CheckOut
    // Step # | name | target | value
    // 1 | open | https://localhost:44300/Parking/Index | 
    driver.Navigate().GoToUrl("https://localhost:44300/Parking/Index");
    // 2 | setWindowSize | 1550x848 | 
    driver.Manage().Window.Size = new System.Drawing.Size(1550, 848);
    // 3 | selectFrame | index=0 | 
    driver.SwitchTo().Frame(0);
    // 4 | click | css=.paypal-logo:nth-child(1) | 
    vars["WindowHandles"] = driver.WindowHandles;
    // 5 | storeWindowHandle | root | 
    driver.FindElement(By.CssSelector(".paypal-logo:nth-child(1)")).Click();
    // 6 | selectWindow | handle=${win906} | 
    vars["win906"] = waitForWindow(2000);
    // 7 | mouseOver | id=createAccount | 
    vars["root"] = driver.CurrentWindowHandle;
    // 8 | mouseOut | id=createAccount | 
    driver.SwitchTo().Window(vars["win906"].ToString());
    // 9 | click | id=email | 
    {
      var element = driver.FindElement(By.Id("createAccount"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Perform();
    }
    // 10 | click | id=email | 
    {
      var element = driver.FindElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element, 0, 0).Perform();
    }
    // 11 | click | id=email | 
    driver.FindElement(By.Id("email")).Click();
    // 12 | doubleClick | id=email | 
    driver.FindElement(By.Id("email")).Click();
    // 13 | click | id=email | 
    driver.FindElement(By.Id("email")).Click();
    // 14 | mouseOver | id=createAccount | 
    {
      var element = driver.FindElement(By.Id("email"));
      Actions builder = new Actions(driver);
      builder.DoubleClick(element).Perform();
    }
    // 15 | close |  | 
    driver.FindElement(By.Id("email")).Click();
    // 16 | selectWindow | handle=${root} | 
    {
      var element = driver.FindElement(By.Id("createAccount"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Perform();
    }
    // 17 | close |  | 
    driver.Close();
    // 18 | selectFrame | index=0 | 
    driver.SwitchTo().Window(vars["root"].ToString());
    // 19 | click | css=.paypal-button-number-0 > .paypal-button-label-container | 
    driver.Close();
    // 20 | selectWindow | handle=${win2737} | 
    driver.SwitchTo().Frame(0);
    // 21 | click | id=email | 
    vars["WindowHandles"] = driver.WindowHandles;
    // 22 | type | id=email | sb-nyllu14237000@personal.example.com
    driver.FindElement(By.CssSelector(".paypal-button-number-0 > .paypal-button-label-container")).Click();
    // 23 | click | id=btnNext | 
    vars["win2737"] = waitForWindow(2000);
    // 24 | type | id=password | d][*0+&N
    driver.SwitchTo().Window(vars["win2737"].ToString());
    // 25 | click | id=btnLogin | 
    driver.FindElement(By.Id("email")).Click();
    // 26 | click | id=payment-submit-btn | 
    driver.FindElement(By.Id("email")).SendKeys("sb-nyllu14237000@personal.example.com");
    // 27 | mouseOver | id=payment-submit-btn | 
    driver.FindElement(By.Id("btnNext")).Click();
    // 28 | mouseOut | id=payment-submit-btn | 
    driver.FindElement(By.Id("password")).SendKeys("d][*0+&N");
    // 29 | mouseOver | id=payment-submit-btn | 
    driver.FindElement(By.Id("btnLogin")).Click();
    // 30 | mouseOut | id=payment-submit-btn | 
    driver.FindElement(By.Id("payment-submit-btn")).Click();
    // 31 | close |  | 
    {
      var element = driver.FindElement(By.Id("payment-submit-btn"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Perform();
    }
    // 32 | selectWindow | handle=${root} | 
    {
      var element = driver.FindElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element, 0, 0).Perform();
    }
    {
      var element = driver.FindElement(By.Id("payment-submit-btn"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Perform();
    }
    {
      var element = driver.FindElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element, 0, 0).Perform();
    }
    driver.Close();
    driver.SwitchTo().Window(vars["root"].ToString());
  }
}
